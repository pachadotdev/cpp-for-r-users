// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// code.cpp
int one_cpp_();
extern "C" SEXP _ece244_one_cpp_() {
  BEGIN_CPP11
    return cpp11::as_sexp(one_cpp_());
  END_CPP11
}
// code.cpp
int sign_cpp_(double x);
extern "C" SEXP _ece244_sign_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(sign_cpp_(cpp11::as_cpp<cpp11::decay_t<double>>(x)));
  END_CPP11
}
// code.cpp
double sum_cpp_(doubles x);
extern "C" SEXP _ece244_sum_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(sum_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x)));
  END_CPP11
}
// code.cpp
double mean_cpp_(doubles x);
extern "C" SEXP _ece244_mean_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(mean_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x)));
  END_CPP11
}
// code.cpp
double var_cpp_(doubles x);
extern "C" SEXP _ece244_var_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(var_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x)));
  END_CPP11
}
// code.cpp
double rmse_cpp_(doubles x, double x0);
extern "C" SEXP _ece244_rmse_cpp_(SEXP x, SEXP x0) {
  BEGIN_CPP11
    return cpp11::as_sexp(rmse_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<double>>(x0)));
  END_CPP11
}
// code.cpp
doubles cumsum_cpp_(doubles x);
extern "C" SEXP _ece244_cumsum_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(cumsum_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x)));
  END_CPP11
}
// code.cpp
bool any_cpp_(logicals x);
extern "C" SEXP _ece244_any_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(any_cpp_(cpp11::as_cpp<cpp11::decay_t<logicals>>(x)));
  END_CPP11
}
// code.cpp
doubles which_cpp_(function pred, doubles x);
extern "C" SEXP _ece244_which_cpp_(SEXP pred, SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(which_cpp_(cpp11::as_cpp<cpp11::decay_t<function>>(pred), cpp11::as_cpp<cpp11::decay_t<doubles>>(x)));
  END_CPP11
}
// code.cpp
bool all_cpp_4_(logicals x);
extern "C" SEXP _ece244_all_cpp_4_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(all_cpp_4_(cpp11::as_cpp<cpp11::decay_t<logicals>>(x)));
  END_CPP11
}
// code.cpp
bool all_cpp_3_(logicals x);
extern "C" SEXP _ece244_all_cpp_3_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(all_cpp_3_(cpp11::as_cpp<cpp11::decay_t<logicals>>(x)));
  END_CPP11
}
// code.cpp
bool all_cpp_2_(logicals x);
extern "C" SEXP _ece244_all_cpp_2_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(all_cpp_2_(cpp11::as_cpp<cpp11::decay_t<logicals>>(x)));
  END_CPP11
}
// code.cpp
bool all_cpp_1_(logicals x);
extern "C" SEXP _ece244_all_cpp_1_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(all_cpp_1_(cpp11::as_cpp<cpp11::decay_t<logicals>>(x)));
  END_CPP11
}
// code.cpp
cpp11::doubles cumprod_cpp_(cpp11::doubles x);
extern "C" SEXP _ece244_cumprod_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(cumprod_cpp_(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(x)));
  END_CPP11
}
// code.cpp
cpp11::doubles cumprod_cpp_2_(cpp11::doubles x);
extern "C" SEXP _ece244_cumprod_cpp_2_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(cumprod_cpp_2_(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(x)));
  END_CPP11
}
// code.cpp
cpp11::doubles cummin_cpp_(cpp11::doubles x);
extern "C" SEXP _ece244_cummin_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(cummin_cpp_(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(x)));
  END_CPP11
}
// code.cpp
cpp11::doubles cummax_cpp_(cpp11::doubles x);
extern "C" SEXP _ece244_cummax_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(cummax_cpp_(cpp11::as_cpp<cpp11::decay_t<cpp11::doubles>>(x)));
  END_CPP11
}
// code.cpp
doubles diff1_cpp_(doubles x);
extern "C" SEXP _ece244_diff1_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(diff1_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x)));
  END_CPP11
}
// code.cpp
doubles diff_cpp_(doubles x, int lag);
extern "C" SEXP _ece244_diff_cpp_(SEXP x, SEXP lag) {
  BEGIN_CPP11
    return cpp11::as_sexp(diff_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<int>>(lag)));
  END_CPP11
}
// code.cpp
doubles range_cpp_(doubles x);
extern "C" SEXP _ece244_range_cpp_(SEXP x) {
  BEGIN_CPP11
    return cpp11::as_sexp(range_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x)));
  END_CPP11
}
// code.cpp
double sum2_cpp_(doubles x, bool na_rm);
extern "C" SEXP _ece244_sum2_cpp_(SEXP x, SEXP na_rm) {
  BEGIN_CPP11
    return cpp11::as_sexp(sum2_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<bool>>(na_rm)));
  END_CPP11
}
// code.cpp
double mean2_cpp_(doubles x, bool na_rm);
extern "C" SEXP _ece244_mean2_cpp_(SEXP x, SEXP na_rm) {
  BEGIN_CPP11
    return cpp11::as_sexp(mean2_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<bool>>(na_rm)));
  END_CPP11
}
// code.cpp
double var2_cpp_(doubles x, bool na_rm);
extern "C" SEXP _ece244_var2_cpp_(SEXP x, SEXP na_rm) {
  BEGIN_CPP11
    return cpp11::as_sexp(var2_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<bool>>(na_rm)));
  END_CPP11
}
// code.cpp
double rmse2_cpp_(doubles x, double x0, bool na_rm);
extern "C" SEXP _ece244_rmse2_cpp_(SEXP x, SEXP x0, SEXP na_rm) {
  BEGIN_CPP11
    return cpp11::as_sexp(rmse2_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<double>>(x0), cpp11::as_cpp<cpp11::decay_t<bool>>(na_rm)));
  END_CPP11
}
// code.cpp
doubles cumsum2_cpp_(doubles x, bool na_rm);
extern "C" SEXP _ece244_cumsum2_cpp_(SEXP x, SEXP na_rm) {
  BEGIN_CPP11
    return cpp11::as_sexp(cumsum2_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<bool>>(na_rm)));
  END_CPP11
}
// code.cpp
doubles cumprod2_cpp_(doubles x, bool na_rm);
extern "C" SEXP _ece244_cumprod2_cpp_(SEXP x, SEXP na_rm) {
  BEGIN_CPP11
    return cpp11::as_sexp(cumprod2_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<bool>>(na_rm)));
  END_CPP11
}
// code.cpp
doubles cummin2_cpp_(doubles x, bool na_rm);
extern "C" SEXP _ece244_cummin2_cpp_(SEXP x, SEXP na_rm) {
  BEGIN_CPP11
    return cpp11::as_sexp(cummin2_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<bool>>(na_rm)));
  END_CPP11
}
// code.cpp
doubles cummax2_cpp_(doubles x, bool na_rm);
extern "C" SEXP _ece244_cummax2_cpp_(SEXP x, SEXP na_rm) {
  BEGIN_CPP11
    return cpp11::as_sexp(cummax2_cpp_(cpp11::as_cpp<cpp11::decay_t<doubles>>(x), cpp11::as_cpp<cpp11::decay_t<bool>>(na_rm)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_ece244_all_cpp_1_",     (DL_FUNC) &_ece244_all_cpp_1_,     1},
    {"_ece244_all_cpp_2_",     (DL_FUNC) &_ece244_all_cpp_2_,     1},
    {"_ece244_all_cpp_3_",     (DL_FUNC) &_ece244_all_cpp_3_,     1},
    {"_ece244_all_cpp_4_",     (DL_FUNC) &_ece244_all_cpp_4_,     1},
    {"_ece244_any_cpp_",       (DL_FUNC) &_ece244_any_cpp_,       1},
    {"_ece244_cummax2_cpp_",   (DL_FUNC) &_ece244_cummax2_cpp_,   2},
    {"_ece244_cummax_cpp_",    (DL_FUNC) &_ece244_cummax_cpp_,    1},
    {"_ece244_cummin2_cpp_",   (DL_FUNC) &_ece244_cummin2_cpp_,   2},
    {"_ece244_cummin_cpp_",    (DL_FUNC) &_ece244_cummin_cpp_,    1},
    {"_ece244_cumprod2_cpp_",  (DL_FUNC) &_ece244_cumprod2_cpp_,  2},
    {"_ece244_cumprod_cpp_",   (DL_FUNC) &_ece244_cumprod_cpp_,   1},
    {"_ece244_cumprod_cpp_2_", (DL_FUNC) &_ece244_cumprod_cpp_2_, 1},
    {"_ece244_cumsum2_cpp_",   (DL_FUNC) &_ece244_cumsum2_cpp_,   2},
    {"_ece244_cumsum_cpp_",    (DL_FUNC) &_ece244_cumsum_cpp_,    1},
    {"_ece244_diff1_cpp_",     (DL_FUNC) &_ece244_diff1_cpp_,     1},
    {"_ece244_diff_cpp_",      (DL_FUNC) &_ece244_diff_cpp_,      2},
    {"_ece244_mean2_cpp_",     (DL_FUNC) &_ece244_mean2_cpp_,     2},
    {"_ece244_mean_cpp_",      (DL_FUNC) &_ece244_mean_cpp_,      1},
    {"_ece244_one_cpp_",       (DL_FUNC) &_ece244_one_cpp_,       0},
    {"_ece244_range_cpp_",     (DL_FUNC) &_ece244_range_cpp_,     1},
    {"_ece244_rmse2_cpp_",     (DL_FUNC) &_ece244_rmse2_cpp_,     3},
    {"_ece244_rmse_cpp_",      (DL_FUNC) &_ece244_rmse_cpp_,      2},
    {"_ece244_sign_cpp_",      (DL_FUNC) &_ece244_sign_cpp_,      1},
    {"_ece244_sum2_cpp_",      (DL_FUNC) &_ece244_sum2_cpp_,      2},
    {"_ece244_sum_cpp_",       (DL_FUNC) &_ece244_sum_cpp_,       1},
    {"_ece244_var2_cpp_",      (DL_FUNC) &_ece244_var2_cpp_,      2},
    {"_ece244_var_cpp_",       (DL_FUNC) &_ece244_var_cpp_,       1},
    {"_ece244_which_cpp_",     (DL_FUNC) &_ece244_which_cpp_,     2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_ece244(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
